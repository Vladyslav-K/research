{"version":3,"sources":["components/Input/index.jsx","utils/validations.js","pages/FieldArrayForm/index.jsx","pages/FieldArrayForm/styles.js","components/RenderCount/index.jsx","components/InputWithRenderCount/index.jsx","pages/HighPerformanceForm/index.jsx","pages/HighPerformanceForm/styles.js","components/Radio/index.jsx","components/Select/index.jsx","components/Checkbox/index.jsx","pages/SimpleForm/index.jsx","pages/SimpleForm/styles.js","components/Header/index.jsx","components/Header/styles.js","pages/index.jsx","index.jsx"],"names":["memo","input","meta","placeholder","Grid","container","direction","TextField","style","color","height","touched","error","simpleFormValidator","values","errors","firstName","lastName","age","skills","length","fieldArrayFormValidator","company","customers","fieldArraySingleFieldValidator","value","highPerformanceFormValidator","address","film","birthday","framework","withStyles","wrapper","position","top","left","right","padding","maxWidth","form","width","margin","companyField","marginBottom","label","paddingTop","classes","justify","className","onSubmit","ReactGA","event","category","action","console","log","mutators","arrayMutators","validate","render","handleSubmit","push","pop","reset","item","name","component","Input","Button","type","onClick","fields","TransitionGroup","map","index","CSSTransition","key","timeout","classNames","customer","xs","remove","role","aria-label","RenderCount","renders","useRef","current","group","subscription","submitting","InputWithRenderCount","JSON","stringify","FormControlLabel","control","options","FormControl","InputLabel","id","MenuItem","ageSelectOptions","initialValues","gender","Select","FormLabel","FormGroup","Checkbox","RadioGroup","Radio","header","backgroundColor","link","fontSize","lineHeight","fontWeight","textDecoration","textTransform","letterSpacing","activeLink","alignItems","exact","to","activeClassName","initialize","debug","location","useLocation","useEffect","pageview","pathname","search","path","SimpleForm","FieldArrayForm","HighPerformanceForm","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.4877e921.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\n// material-ui components\nimport { Grid, TextField } from '@material-ui/core';\n\nconst Input = ({ input, meta, placeholder }) => (\n  <Grid container direction='column'>\n    <TextField {...input} placeholder={placeholder} />\n    <span></span>\n    <span style={{ color: 'red', height: '20px' }}>{meta.touched && meta.error}</span>\n  </Grid>\n);\n\nexport default memo(Input);\n","export const simpleFormValidator = (values) => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  }\n\n  if (!values.age) {\n    errors.age = 'Required';\n  }\n\n  if (!values.skills?.length) {\n    errors.skills = 'Required';\n  }\n\n  return errors;\n};\n\nexport const fieldArrayFormValidator = (values) => {\n  const errors = {};\n\n  if (!values.company) {\n    errors.company = 'Required';\n  } else if (!values.customers?.length) {\n    errors.company = 'Need at least one customer';\n  }\n\n  return errors;\n};\n\nexport const fieldArraySingleFieldValidator = (value) => {\n  if (!value) {\n    return 'Required';\n  }\n};\n\nexport const highPerformanceFormValidator = (values) => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  }\n\n  if (!values.address) {\n    errors.address = 'Required';\n  }\n\n  if (!values.film) {\n    errors.film = 'Required';\n  }\n\n  if (!values.birthday) {\n    errors.birthday = 'Required';\n  }\n\n  if (!values.framework) {\n    errors.framework = 'Required';\n  }\n\n  return errors;\n};\n","import React, { memo } from 'react';\nimport ReactGA from 'react-ga';\nimport { Form, Field } from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport { FieldArray } from 'react-final-form-arrays';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n// components\nimport Input from 'components/Input';\n\n// validators\nimport { fieldArrayFormValidator, fieldArraySingleFieldValidator } from 'utils/validations';\n\n// material-ui components\nimport { Grid, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\n// styles\nimport styles from './styles';\n\nconst FieldArrayForm = ({ classes }) => {\n  const onSubmit = (value) => {\n    ReactGA.event({\n      category: 'Submit',\n      action: 'Submit field array form',\n      label: 'Field array form',\n    });\n\n    console.log(value);\n  };\n\n  return (\n    <Grid container justify='center' className={classes.wrapper}>\n      <Grid container className={classes.container}>\n        <Grid container>\n          <h1>Field array</h1>\n        </Grid>\n\n        <Form\n          onSubmit={onSubmit}\n          mutators={{\n            ...arrayMutators,\n          }}\n          validate={fieldArrayFormValidator}\n          render={({\n            handleSubmit,\n            form: {\n              mutators: { push, pop },\n            },\n            form: { reset },\n          }) => (\n            <form onSubmit={handleSubmit} className={classes.form}>\n              <Grid container className={classes.company}>\n                <Grid item className={classes.companyField}>\n                  <Field name='company' component={Input} placeholder='Company name' />\n                </Grid>\n\n                <Grid container>\n                  <Button type='button' onClick={() => push('customers')}>\n                    Add customer\n                  </Button>\n                  <Button type='button' onClick={() => pop('customers')}>\n                    Remove last customer\n                  </Button>\n                </Grid>\n              </Grid>\n\n              <FieldArray name='customers'>\n                {({ fields }) => (\n                  <TransitionGroup>\n                    {fields.map((name, index) => (\n                      <CSSTransition key={name} timeout={450} classNames='fade'>\n                        <Grid container justify='space-between' className={classes.customer}>\n                          <Grid container item xs={3}>\n                            <label className={classes.label}> Customer #{index + 1}</label>\n                          </Grid>\n\n                          <Grid container item xs={3}>\n                            <Field\n                              name={`${name}.firstName`}\n                              component={Input}\n                              placeholder='First name'\n                              validate={fieldArraySingleFieldValidator}\n                            />\n                          </Grid>\n\n                          <Grid container item xs={3}>\n                            <Field\n                              name={`${name}.lastName`}\n                              component={Input}\n                              placeholder='Last name'\n                              validate={fieldArraySingleFieldValidator}\n                            />\n                          </Grid>\n\n                          <Grid item xs={2}>\n                            <Button type='button' onClick={() => fields.remove(index)}>\n                              <span role='img' aria-label='delete'>\n                                &#10060;\n                              </span>\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </CSSTransition>\n                    ))}\n                  </TransitionGroup>\n                )}\n              </FieldArray>\n\n              <Grid container>\n                <Button type='submit'>Submit</Button>\n                <Button type='button' onClick={reset}>\n                  Reset\n                </Button>\n              </Grid>\n            </form>\n          )}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(withStyles(styles)(FieldArrayForm));\n","export default {\n  wrapper: {\n    position: 'absolute',\n    top: '100px',\n    left: 0,\n    right: 0,\n    padding: '50px 0',\n  },\n  container: {\n    maxWidth: '800px',\n  },\n  form: {\n    width: '100%',\n  },\n  company: {\n    margin: '10px 0',\n  },\n  companyField: {\n    marginBottom: '10px',\n  },\n  label: {\n    paddingTop: '10px',\n  },\n};\n","import React, { useRef } from 'react';\n\nconst RenderCount = ({ form }) => {\n  const renders = useRef(0);\n\n  return (\n    <span>\n      {form ? 'Form render count:' : 'Render count:'} {++renders.current}\n    </span>\n  );\n};\n\nexport default RenderCount;\n","import React, { memo } from 'react';\n\n// components\nimport RenderCount from 'components/RenderCount';\n\n// material-ui components\nimport { Grid, TextField } from '@material-ui/core';\n\nconst InputWithRenderCount = ({ input, meta, placeholder }) => (\n  <Grid container direction='column'>\n    <TextField {...input} placeholder={placeholder} />\n    <RenderCount />\n    <span style={{ color: 'red', height: '20px' }}>{meta.touched && meta.error}</span>\n  </Grid>\n);\nexport default memo(InputWithRenderCount);\n","import React, { memo } from 'react';\nimport ReactGA from 'react-ga';\nimport { Form, Field, FormSpy } from 'react-final-form';\n\n// components\nimport InputWithRenderCount from 'components/InputWithRenderCount';\nimport RenderCount from 'components/RenderCount';\n\n// validator\nimport { highPerformanceFormValidator } from 'utils/validations';\n\n// material-ui components\nimport { Grid, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\n// styles\nimport styles from './styles';\n\nconst HighPerformanceForm = ({ classes }) => {\n  const onSubmit = (values) => {\n    ReactGA.event({\n      category: 'Submit',\n      action: 'Submit high performance form',\n      label: 'High performance form',\n    });\n\n    console.log(values);\n  };\n\n  return (\n    <Grid container justify='center' className={classes.wrapper}>\n      <Grid container className={classes.container}>\n        <Grid container>\n          <h1>High performance form</h1>\n        </Grid>\n\n        <Form\n          onSubmit={onSubmit}\n          validate={highPerformanceFormValidator}\n          subscription={{ submitting: true }}\n          render={({ handleSubmit, form: { reset } }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container>\n                <Field name='firstName' component={InputWithRenderCount} placeholder='First name' type='text' />\n              </Grid>\n\n              <Grid container>\n                <Field name='lastName' component={InputWithRenderCount} placeholder='Last name' type='text' />\n              </Grid>\n\n              <Grid container>\n                <Field name='address' component={InputWithRenderCount} placeholder='Address' type='text' />\n              </Grid>\n\n              <Grid container>\n                <Field name='film' component={InputWithRenderCount} placeholder='Favorite film' type='text' />\n              </Grid>\n\n              <Grid container>\n                <Field name='birthday' component={InputWithRenderCount} placeholder='Birthday' type='text' />\n              </Grid>\n\n              <Grid container>\n                <Field name='framework' component={InputWithRenderCount} placeholder='Favorite framework' type='text' />\n              </Grid>\n\n              <Grid container>\n                <Button type='submit'>Submit</Button>\n                <Button type='button' onClick={reset}>\n                  Reset\n                </Button>\n              </Grid>\n\n              <FormSpy subscription={{ values: true }}>\n                {({ values }) => (\n                  <pre>\n                    <RenderCount form />\n                    <br />\n                    {JSON.stringify(values, 0, 2)}\n                  </pre>\n                )}\n              </FormSpy>\n            </form>\n          )}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(withStyles(styles)(HighPerformanceForm));\n","export default {\n  wrapper: {\n    position: 'absolute',\n    top: '100px',\n    left: 0,\n    right: 0,\n    padding: '50px 0',\n  },\n  container: {\n    maxWidth: '800px',\n  },\n  group: {\n    padding: '16px 0',\n  },\n};\n","import React, { memo } from 'react';\n\n// material-ui components\nimport { Radio as MuiRadio, FormControlLabel } from '@material-ui/core';\n\nconst Radio = ({ input, label }) => <FormControlLabel control={<MuiRadio {...input} />} label={label} />;\n\nexport default memo(Radio);\n","import React, { memo } from 'react';\n\n// material-ui components\nimport { Grid, Select as MuiSelect, MenuItem, FormControl, InputLabel } from '@material-ui/core';\n\nconst Select = ({ input, meta, label, options }) => (\n  <Grid container direction='column'>\n    <FormControl style={{ width: '100%' }}>\n      <InputLabel id={input.name}>{label}</InputLabel>\n\n      <MuiSelect id={input.name} {...input}>\n        {options.map(({ label, value }) => (\n          <MenuItem key={label} value={value}>\n            {label}\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n\n    <span style={{ color: 'red', height: '20px' }}>{meta.touched && meta.error}</span>\n  </Grid>\n);\n\nexport default memo(Select);\n","import React, { memo } from 'react';\n\n// material-ui components\nimport { Checkbox as MuiCheckbox, FormControlLabel } from '@material-ui/core';\n\nconst Checkbox = ({ input, label }) => <FormControlLabel control={<MuiCheckbox {...input} />} label={label} />;\n\nexport default memo(Checkbox);\n","import React, { memo } from 'react';\nimport ReactGA from 'react-ga';\nimport { Form, Field } from 'react-final-form';\n\n// components\nimport Input from 'components/Input';\nimport Radio from 'components/Radio';\nimport Select from 'components/Select';\nimport Checkbox from 'components/Checkbox';\n\n// validator\nimport { simpleFormValidator } from 'utils/validations';\n\n// material-ui components\nimport { Grid, Button, FormControl, FormLabel, FormGroup, RadioGroup } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\n// styles\nimport styles from './styles';\n\nconst ageSelectOptions = [\n  { label: 'Ten', value: 10 },\n  { label: 'Twenty', value: 20 },\n  { label: 'Thirty', value: 30 },\n];\n\nconst SimpleForm = ({ classes }) => {\n  const onSubmit = (values) => {\n    ReactGA.event({\n      category: 'Submit',\n      action: 'Submit simple form',\n      label: 'Simple form',\n    });\n\n    console.log(values);\n  };\n\n  return (\n    <Grid container justify='center' className={classes.wrapper}>\n      <Grid container className={classes.container}>\n        <Grid container>\n          <h1>Simple form</h1>\n        </Grid>\n\n        <Form\n          onSubmit={onSubmit}\n          validate={simpleFormValidator}\n          subscription={{ touched: true, errors: true }}\n          initialValues={{ gender: 'male' }}\n          render={({ handleSubmit, form: { reset }, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container>\n                <Field name='firstName' component={Input} placeholder='First name' type='text' />\n              </Grid>\n\n              <Grid container>\n                <Field name='lastName' component={Input} placeholder='Last name' type='text' />\n              </Grid>\n\n              <Grid container>\n                <Field name='age' component={Select} label='Age' options={ageSelectOptions} type='select' />\n              </Grid>\n\n              <Grid container direction='column' className={classes.group}>\n                <FormControl component='fieldset'>\n                  <FormLabel component='legend'>Skills</FormLabel>\n                  <FormGroup>\n                    <Field name='skills' component={Checkbox} label='CSS' type='checkbox' value='css' />\n                    <Field name='skills' component={Checkbox} label='JS' type='checkbox' value='js' />\n                    <Field name='skills' component={Checkbox} label='React' type='checkbox' value='react' />\n                    <Field name='skills' component={Checkbox} label='Git' type='checkbox' value='git' />\n                  </FormGroup>\n                </FormControl>\n\n                <span style={{ color: 'red', height: '20px' }}>{touched.skills && errors.skills}</span>\n              </Grid>\n\n              <Grid container className={classes.group}>\n                <FormControl component='fieldset'>\n                  <FormLabel component='legend'>Gender</FormLabel>\n                  <RadioGroup>\n                    <Field name='gender' component={Radio} label='Male' type='radio' value='male' />\n                    <Field name='gender' component={Radio} label='Female' type='radio' value='female' />\n                    <Field name='gender' component={Radio} label='Other' type='radio' value='other' />\n                  </RadioGroup>\n                </FormControl>\n              </Grid>\n\n              <Grid container>\n                <Button type='submit'>Submit</Button>\n                <Button type='button' onClick={reset}>\n                  Reset\n                </Button>\n              </Grid>\n            </form>\n          )}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(withStyles(styles)(SimpleForm));\n","export default {\n  wrapper: {\n    position: 'absolute',\n    top: '100px',\n    left: 0,\n    right: 0,\n    padding: '50px 0',\n  },\n  container: {\n    maxWidth: '800px',\n  },\n  group: {\n    padding: '16px 0',\n  },\n};\n","import React, { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n// material-ui components\nimport { Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\n// styles\nimport styles from './styles';\n\nconst Header = ({ classes }) => (\n  <Grid component='header' container justify='center' className={classes.header}>\n    <Grid container justify='space-around' alignItems='center' className={classes.container}>\n      <Grid item>\n        <NavLink exact to='/' className={classes.link} activeClassName={classes.activeLink}>\n          Simple form\n        </NavLink>\n      </Grid>\n\n      <Grid item>\n        <NavLink exact to='/field-array' className={classes.link} activeClassName={classes.activeLink}>\n          Field array\n        </NavLink>\n      </Grid>\n\n      <Grid item>\n        <NavLink exact to='/high-performance-form' className={classes.link} activeClassName={classes.activeLink}>\n          High performance form\n        </NavLink>\n      </Grid>\n    </Grid>\n  </Grid>\n);\n\nexport default memo(withStyles(styles)(Header));\n","export default {\n  header: {\n    backgroundColor: '#F8F8F8',\n  },\n  container: {\n    maxWidth: '1440px',\n    height: '60px',\n  },\n  link: {\n    color: '#333333',\n    fontSize: '16px',\n    lineHeight: '22px',\n    fontWeight: 'normal',\n    textDecoration: 'none',\n    textTransform: 'none',\n    letterSpacing: '0.03em',\n  },\n  activeLink: {\n    color: '#100081',\n    fontWeight: 'bold',\n  },\n};\n","import React, { memo, useEffect } from 'react';\nimport ReactGA from 'react-ga';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n// pages\nimport FieldArrayForm from 'pages/FieldArrayForm';\nimport HighPerformanceForm from 'pages/HighPerformanceForm';\nimport SimpleForm from 'pages/SimpleForm';\n\n// components\nimport Header from 'components/Header';\n\n// styles\nimport './index.css';\n\nReactGA.initialize('UA-173971988-2', { debug: true });\n\nconst App = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    ReactGA.pageview(location.pathname + location.search);\n  }, [location]);\n\n  return (\n    <>\n      <Header />\n      <Route\n        render={({ location }) => (\n          <TransitionGroup>\n            <CSSTransition key={location.key} timeout={450} classNames='fade'>\n              <Switch location={location}>\n                <Route exact path='/' component={SimpleForm} />\n                <Route exact path='/field-array' component={FieldArrayForm} />\n                <Route exact path='/high-performance-form' component={HighPerformanceForm} />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        )}\n      />\n    </>\n  );\n};\n\nexport default memo(App);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// app component\nimport App from 'pages';\n\nrender(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}